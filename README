verilog_bundler
Tyler Anderson
Sat 11/02/2019_13:41:47.58

Description: 
A python utility for generating Verilog 2001 files for bundle definitions. 

Motivation: 
One of the great shortcomings of Verilog 2001 is its lack of a generic interface
feature--if a connection is added between two submodules in a hierarchy, it
requires modifying every level of the connection. This utility provides a simple
remedy to this problem by autogenerating collection of verilog modules and header
files which fully describe and encapsulate a set of bundled signals. 

Interface definitions: 
An bundle named <bname> of width <bwidth> is defined in a JSON file: <bname>.json. 

Usage:
Consider the bundle <bname> has elements <el0>, <el1> each of width <wi0>,
<wi1>. The json file format should be an array of objects with the
following structure:
[
    {
	"output"    : "<bname>",
	"min_width" : <bwidth>,
	"element"   : [
	    {
		"input" : "<el0>",
		"width" : <wi0>,
		"description" : "el0 descriptive text here"
	    },
	    
	    {
		"input" : "<el1>",
		"width" : <wi1>,
		"description" : "el1 descriptive text here" 
	    }
      	]
    }
]

Data Products: 
The utility produces three verilog files
<ifname>_inc.v     - localparams for component width and position
<ifname>_fan_in.v  - instantiate this module at the point of composition   
<ifname>_fan_out.v - instantiate this module at the point of decomposition
